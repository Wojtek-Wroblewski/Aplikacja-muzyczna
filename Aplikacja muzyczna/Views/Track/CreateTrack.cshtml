@model Aplikacja_muzyczna.Models.AddTracks

@{
    ViewBag.Title = "Create";
}

<!---
		<h2>Create</h2>
--->

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">


    <h2 style="text-align:center;padding-top:15px;">AddTracks</h2>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="row">
            <div class="col-xs-2">
            </div>
            <div class="col-xs-8">

                @if (TempData["TrackTitle"] != null)
                {
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Value = TempData["TrackTitle"] } })
                }
                else
                {
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Value = "" } })
                }
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        <div class="row">
            <div class="col-xs-2">
            </div>
            <div class="col-xs-8">
                @{var Now = Request.Cookies["DateNow"];}


                @if (TempData["TrackDate"] != null)
                {
                    @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @max = Now.Value, @Value = TempData["TrackDate"] } })
                }
                else
                {
                    @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @max = Now.Value, @Value = Now.Value } })
                }
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="form-group">
        <div class="row">
            @Html.LabelFor(model => model.SearchString, htmlAttributes: new { @class = "control-label col-md-2"})
        </div>
        <div class="row">
            <div class="col-xs-2">
            </div>
            <div class="col-xs-8">
               @if (TempData["JustSearchedArtist"] != null)
                {
                    <input value="@TempData["JustSearchedArtist"]" class="form-control text-box single-line" id="SearchString" name="SearchString" type="text">
                }
                else
                {
                    <input placeholder="Search for an Artist" class="form-control text-box single-line" id="SearchString" name="SearchString" type="text">
                }

                @Html.ValidationMessageFor(model => model.SearchString, "", new { @class = "text-danger" })
            </div>
            @*<input type="submit" value="Search" class="btn btn-default" style="margin:10px 0px 10px 0px" />*@
        </div>

        <div class="row">
            <div class="col-xs-2">`
            </div>
            <div class="col-xs-offset-9">
                <input type="submit" value="Search" name ="submit" id ="submit"class="btn btn-default" style="margin:10px 0px 10px -20px" />
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="container-fluid">
            <div class="row">
                <div class="col-xs-offset-8 col-xs-2" style="padding:0px;">
                    <input type="submit" value="Create" name ="submit" id ="submit" class="btn btn-default" style="margin:10px 0px 10px 0px" />
                </div>
            </div>
        </div>
    </div>
</div>
}


